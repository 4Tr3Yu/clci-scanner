---
interface Props {
	alertType: string;
	message: string;
	id: string
}

const { alertType, message, id } = Astro.props;
---
<div class={`w-full alert-box border bg-gradient-to-bl px-3 py-2 rounded-lg relative mb-4 alert-box--${alertType}`} >

	<h2 class="text-xs font-bold capitalize">{ alertType }</h2>
	<p class="font-thin">{ message }</p>
	<button id={`close-alert-${id}`}
		class="absolute right-0 top-0 h-full w-6 flex items-center justify-center border-l bg-white/15 rounded-r-lg">
		x
	</button>
</div>

<script define:vars={{id}}>
	const closeBtn = document.getElementById(`close-alert-${id}`);
	closeBtn.addEventListener('click', () => {
		closeBtn.parentElement.remove();
	});
</script>

<style scoped lang="scss">
	.alert-box {
		&--error {
			@apply border-rose-400 from-rose-950 to-rose-800 text-rose-200;
		}
	
		&--success {
			@apply border-emerald-400 from-emerald-950 to-emerald-800 text-emerald-200;
		}
	
		&--warning {
			@apply border-amber-400 from-amber-950 to-amber-800 text-amber-200;
		}
	
		&--info {
			@apply border-sky-400 from-sky-950 to-sky-800 text-sky-200;
	
		}
	
	}
</style>